

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Dec 21 20:59:25 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F56Q71
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/02/2024 GMT
    22                           ; 
    23                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F56Q71 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    57   000000                     
    58 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    59   000000                     
    60 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    61   000000                     _IOCEF	set	1063
    62   000000                     _IOCEN	set	1062
    63   000000                     _IOCEP	set	1061
    64   000000                     _IOCCF	set	1047
    65   000000                     _IOCCN	set	1046
    66   000000                     _IOCCP	set	1045
    67   000000                     _IOCBF	set	1039
    68   000000                     _IOCBN	set	1038
    69   000000                     _IOCBP	set	1037
    70   000000                     _IOCAF	set	1031
    71   000000                     _IOCAN	set	1030
    72   000000                     _IOCAP	set	1029
    73   000000                     _RC4I2C	set	647
    74   000000                     _RC3I2C	set	648
    75   000000                     _INLVLE	set	1060
    76   000000                     _INLVLC	set	1044
    77   000000                     _INLVLB	set	1036
    78   000000                     _INLVLA	set	1028
    79   000000                     _SLRCONE	set	1059
    80   000000                     _SLRCONC	set	1043
    81   000000                     _SLRCONB	set	1035
    82   000000                     _SLRCONA	set	1027
    83   000000                     _ODCONE	set	1058
    84   000000                     _ODCONC	set	1042
    85   000000                     _ODCONB	set	1034
    86   000000                     _ODCONA	set	1026
    87   000000                     _WPUE	set	1057
    88   000000                     _WPUC	set	1041
    89   000000                     _WPUB	set	1033
    90   000000                     _WPUA	set	1025
    91   000000                     _ANSELF	set	1064
    92   000000                     _ANSELD	set	1048
    93   000000                     _ANSELC	set	1040
    94   000000                     _ANSELB	set	1032
    95   000000                     _CLCnCON	set	214
    96   000000                     _CLCnPOL	set	215
    97   000000                     _OSCTUNE	set	176
    98   000000                     _OSCFRQ	set	177
    99   000000                     _OSCEN	set	179
   100                           
   101                           	psect	nvCOMRAM
   102   000501                     __pnvCOMRAM:
   103                           	callstack 0
   104   000501                     _INT2_InterruptHandler:
   105                           	callstack 0
   106   000501                     	ds	2
   107   000503                     _INT1_InterruptHandler:
   108                           	callstack 0
   109   000503                     	ds	2
   110   000505                     _INT0_InterruptHandler:
   111                           	callstack 0
   112   000505                     	ds	2
   113   000000                     _CLCDATAbits	set	212
   114   000000                     _CLCnCONbits	set	214
   115   000000                     _ACTCON	set	172
   116   000000                     _OSCCON1	set	173
   117   000000                     _OSCCON3	set	175
   118   000000                     _CLCDATA	set	212
   119   000000                     _CLCSELECT	set	213
   120   000000                     _FSCMCON	set	1112
   121   000000                     _PIR1bits	set	1203
   122   000000                     _INTCON0bits	set	1238
   123   000000                     _PIR6bits	set	1208
   124   000000                     _PIR10bits	set	1212
   125   000000                     _LATA	set	320
   126   000000                     _CLCnGLS3	set	223
   127   000000                     _CLCnGLS2	set	222
   128   000000                     _CLCnGLS1	set	221
   129   000000                     _CLCnGLS0	set	220
   130   000000                     _CLCnSEL3	set	219
   131   000000                     _CLCnSEL2	set	218
   132   000000                     _CLCnSEL1	set	217
   133   000000                     _CLCnSEL0	set	216
   134   000000                     _TRISA	set	328
   135   000000                     _LATF	set	325
   136   000000                     _LATE	set	324
   137   000000                     _LATD	set	323
   138   000000                     _LATC	set	322
   139   000000                     _LATB	set	321
   140   000000                     _RA2PPS	set	515
   141   000000                     _CLCIN0PPS	set	609
   142   000000                     _RB2I2C	set	645
   143   000000                     _RB1I2C	set	646
   144   000000                     _ANSELA	set	1024
   145   000000                     _TRISF	set	333
   146   000000                     _TRISE	set	332
   147   000000                     _TRISD	set	331
   148   000000                     _TRISC	set	330
   149   000000                     _TRISB	set	329
   150   000000                     _INLVLD	set	1052
   151   000000                     _SLRCOND	set	1051
   152   000000                     _ODCOND	set	1050
   153   000000                     _WPUD	set	1049
   154   000000                     _ANSELE	set	1056
   155   000000                     _IOCWP	set	1085
   156   000000                     _INLVLF	set	1068
   157   000000                     _SLRCONF	set	1067
   158   000000                     _ODCONF	set	1066
   159   000000                     _WPUF	set	1065
   160   000000                     _CLCIN3PPS	set	612
   161   000000                     _CLCIN2PPS	set	611
   162   000000                     _CLCIN1PPS	set	610
   163   000000                     _IOCWF	set	1087
   164   000000                     _IOCWN	set	1086
   165                           
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169   00FE5A                     __pcinit:
   170                           	callstack 0
   171   00FE5A                     start_initialization:
   172                           	callstack 0
   173   00FE5A                     __initialization:
   174                           	callstack 0
   175   00FE5A                     end_of_initialization:
   176                           	callstack 0
   177   00FE5A                     __end_of__initialization:
   178                           	callstack 0
   179   00FE5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180   00FE5C  6EF8               	movwf	tblptru,c
   181   00FE5E  0100               	movlb	0
   182   00FE60  EF32  F07F         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	cstackCOMRAM
   185   000507                     __pcstackCOMRAM:
   186                           	callstack 0
   187   000507                     INT0_SetInterruptHandler@InterruptHandler:
   188                           	callstack 0
   189   000507                     INT1_SetInterruptHandler@InterruptHandler:
   190                           	callstack 0
   191   000507                     INT2_SetInterruptHandler@InterruptHandler:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x0
   195   000507                     	ds	2
   196   000509                     
   197                           ; 1 bytes @ 0x2
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 39 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;		None
   208 ;; Return value:  Size  Location     Type
   209 ;;                  2  286[None  ] int 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   221 ;;Total ram usage:        0 bytes
   222 ;; Hardware stack levels required when called: 3
   223 ;; This function calls:
   224 ;;		_SYSTEM_Initialize
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231   00FE64                     __ptext0:
   232                           	callstack 0
   233   00FE64                     _main:
   234                           	callstack 124
   235   00FE64                     
   236                           ;main.c: 41:     SYSTEM_Initialize();
   237   00FE64  EC38  F07F         	call	_SYSTEM_Initialize	;wreg free
   238   00FE68                     l287:
   239   00FE68  EF34  F07F         	goto	l287
   240   00FE6C  EFFE  F07F         	goto	start
   241   00FE70                     __end_of_main:
   242                           	callstack 0
   243                           
   244 ;; *************** function _SYSTEM_Initialize *****************
   245 ;; Defined at:
   246 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels used: 1
   266 ;; Hardware stack levels required when called: 2
   267 ;; This function calls:
   268 ;;		_CLC1_Initialize
   269 ;;		_CLOCK_Initialize
   270 ;;		_INTERRUPT_Initialize
   271 ;;		_PIN_MANAGER_Initialize
   272 ;; This function is called by:
   273 ;;		_main
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text1
   278   00FE70                     __ptext1:
   279                           	callstack 0
   280   00FE70                     _SYSTEM_Initialize:
   281                           	callstack 124
   282   00FE70                     
   283                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
   284   00FE70  EC41  F07F         	call	_CLOCK_Initialize	;wreg free
   285                           
   286                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
   287   00FE74  EC86  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   288                           
   289                           ;mcc_generated_files/system/src/system.c: 40:     CLC1_Initialize();
   290   00FE78  EC52  F07F         	call	_CLC1_Initialize	;wreg free
   291   00FE7C                     
   292                           ;mcc_generated_files/system/src/system.c: 41:     INTERRUPT_Initialize();
   293   00FE7C  EC6C  F07F         	call	_INTERRUPT_Initialize	;wreg free
   294   00FE80  0012               	return		;funcret
   295   00FE82                     __end_of_SYSTEM_Initialize:
   296                           	callstack 0
   297                           
   298 ;; *************** function _PIN_MANAGER_Initialize *****************
   299 ;; Defined at:
   300 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_SYSTEM_Initialize
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text2
   328   00FF0C                     __ptext2:
   329                           	callstack 0
   330   00FF0C                     _PIN_MANAGER_Initialize:
   331                           	callstack 125
   332   00FF0C                     
   333                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
   334   00FF0C  0E00               	movlw	0
   335   00FF0E  0101               	movlb	1	; () banked
   336   00FF10  6F40               	movwf	64,b	;volatile
   337                           
   338                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
   339   00FF12  0E00               	movlw	0
   340   00FF14  6F41               	movwf	65,b	;volatile
   341                           
   342                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
   343   00FF16  0E00               	movlw	0
   344   00FF18  6F42               	movwf	66,b	;volatile
   345                           
   346                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
   347   00FF1A  0E00               	movlw	0
   348   00FF1C  6F43               	movwf	67,b	;volatile
   349                           
   350                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
   351   00FF1E  0E00               	movlw	0
   352   00FF20  6F44               	movwf	68,b	;volatile
   353                           
   354                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
   355   00FF22  0E00               	movlw	0
   356   00FF24  6F45               	movwf	69,b	;volatile
   357                           
   358                           ;mcc_generated_files/system/src/pins.c: 53:     TRISA = 0xFB;
   359   00FF26  0EFB               	movlw	251
   360   00FF28  6F48               	movwf	72,b	;volatile
   361   00FF2A                     
   362                           ; BSR set to: 1
   363                           ;mcc_generated_files/system/src/pins.c: 54:     TRISB = 0xFF;
   364   00FF2A  6949               	setf	73,b	;volatile
   365   00FF2C                     
   366                           ; BSR set to: 1
   367                           ;mcc_generated_files/system/src/pins.c: 55:     TRISC = 0xFF;
   368   00FF2C  694A               	setf	74,b	;volatile
   369   00FF2E                     
   370                           ; BSR set to: 1
   371                           ;mcc_generated_files/system/src/pins.c: 56:     TRISD = 0xFF;
   372   00FF2E  694B               	setf	75,b	;volatile
   373                           
   374                           ;mcc_generated_files/system/src/pins.c: 57:     TRISE = 0xF;
   375   00FF30  0E0F               	movlw	15
   376   00FF32  6F4C               	movwf	76,b	;volatile
   377   00FF34                     
   378                           ; BSR set to: 1
   379                           ;mcc_generated_files/system/src/pins.c: 58:     TRISF = 0xFF;
   380   00FF34  694D               	setf	77,b	;volatile
   381                           
   382                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELA = 0xF8;
   383   00FF36  0EF8               	movlw	248
   384   00FF38  0104               	movlb	4	; () banked
   385   00FF3A  6F00               	movwf	0,b	;volatile
   386                           
   387                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELB = 0xF3;
   388   00FF3C  0EF3               	movlw	243
   389   00FF3E  6F08               	movwf	8,b	;volatile
   390   00FF40                     
   391                           ; BSR set to: 4
   392                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELC = 0xFF;
   393   00FF40  6910               	setf	16,b	;volatile
   394   00FF42                     
   395                           ; BSR set to: 4
   396                           ;mcc_generated_files/system/src/pins.c: 66:     ANSELD = 0xFF;
   397   00FF42  6918               	setf	24,b	;volatile
   398                           
   399                           ;mcc_generated_files/system/src/pins.c: 67:     ANSELE = 0x7;
   400   00FF44  0E07               	movlw	7
   401   00FF46  6F20               	movwf	32,b	;volatile
   402   00FF48                     
   403                           ; BSR set to: 4
   404                           ;mcc_generated_files/system/src/pins.c: 68:     ANSELF = 0xFF;
   405   00FF48  6928               	setf	40,b	;volatile
   406                           
   407                           ;mcc_generated_files/system/src/pins.c: 73:     WPUA = 0x0;
   408   00FF4A  0E00               	movlw	0
   409   00FF4C  6F01               	movwf	1,b	;volatile
   410                           
   411                           ;mcc_generated_files/system/src/pins.c: 74:     WPUB = 0x0;
   412   00FF4E  0E00               	movlw	0
   413   00FF50  6F09               	movwf	9,b	;volatile
   414                           
   415                           ;mcc_generated_files/system/src/pins.c: 75:     WPUC = 0x0;
   416   00FF52  0E00               	movlw	0
   417   00FF54  6F11               	movwf	17,b	;volatile
   418                           
   419                           ;mcc_generated_files/system/src/pins.c: 76:     WPUD = 0x0;
   420   00FF56  0E00               	movlw	0
   421   00FF58  6F19               	movwf	25,b	;volatile
   422                           
   423                           ;mcc_generated_files/system/src/pins.c: 77:     WPUE = 0x0;
   424   00FF5A  0E00               	movlw	0
   425   00FF5C  6F21               	movwf	33,b	;volatile
   426                           
   427                           ;mcc_generated_files/system/src/pins.c: 78:     WPUF = 0x0;
   428   00FF5E  0E00               	movlw	0
   429   00FF60  6F29               	movwf	41,b	;volatile
   430                           
   431                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONA = 0x0;
   432   00FF62  0E00               	movlw	0
   433   00FF64  6F02               	movwf	2,b	;volatile
   434                           
   435                           ;mcc_generated_files/system/src/pins.c: 84:     ODCONB = 0x0;
   436   00FF66  0E00               	movlw	0
   437   00FF68  6F0A               	movwf	10,b	;volatile
   438                           
   439                           ;mcc_generated_files/system/src/pins.c: 85:     ODCONC = 0x0;
   440   00FF6A  0E00               	movlw	0
   441   00FF6C  6F12               	movwf	18,b	;volatile
   442                           
   443                           ;mcc_generated_files/system/src/pins.c: 86:     ODCOND = 0x0;
   444   00FF6E  0E00               	movlw	0
   445   00FF70  6F1A               	movwf	26,b	;volatile
   446                           
   447                           ;mcc_generated_files/system/src/pins.c: 87:     ODCONE = 0x0;
   448   00FF72  0E00               	movlw	0
   449   00FF74  6F22               	movwf	34,b	;volatile
   450                           
   451                           ;mcc_generated_files/system/src/pins.c: 88:     ODCONF = 0x0;
   452   00FF76  0E00               	movlw	0
   453   00FF78  6F2A               	movwf	42,b	;volatile
   454   00FF7A                     
   455                           ; BSR set to: 4
   456                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
   457   00FF7A  6903               	setf	3,b	;volatile
   458   00FF7C                     
   459                           ; BSR set to: 4
   460                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
   461   00FF7C  690B               	setf	11,b	;volatile
   462   00FF7E                     
   463                           ; BSR set to: 4
   464                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
   465   00FF7E  6913               	setf	19,b	;volatile
   466   00FF80                     
   467                           ; BSR set to: 4
   468                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
   469   00FF80  691B               	setf	27,b	;volatile
   470                           
   471                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
   472   00FF82  0E07               	movlw	7
   473   00FF84  6F23               	movwf	35,b	;volatile
   474   00FF86                     
   475                           ; BSR set to: 4
   476                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
   477   00FF86  692B               	setf	43,b	;volatile
   478   00FF88                     
   479                           ; BSR set to: 4
   480                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
   481   00FF88  6904               	setf	4,b	;volatile
   482   00FF8A                     
   483                           ; BSR set to: 4
   484                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
   485   00FF8A  690C               	setf	12,b	;volatile
   486   00FF8C                     
   487                           ; BSR set to: 4
   488                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
   489   00FF8C  6914               	setf	20,b	;volatile
   490   00FF8E                     
   491                           ; BSR set to: 4
   492                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
   493   00FF8E  691C               	setf	28,b	;volatile
   494                           
   495                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
   496   00FF90  0E0F               	movlw	15
   497   00FF92  6F24               	movwf	36,b	;volatile
   498   00FF94                     
   499                           ; BSR set to: 4
   500                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
   501   00FF94  692C               	setf	44,b	;volatile
   502                           
   503                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x0;
   504   00FF96  0E00               	movlw	0
   505   00FF98  0102               	movlb	2	; () banked
   506   00FF9A  6F86               	movwf	134,b	;volatile
   507                           
   508                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x0;
   509   00FF9C  0E00               	movlw	0
   510   00FF9E  6F85               	movwf	133,b	;volatile
   511                           
   512                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
   513   00FFA0  0E00               	movlw	0
   514   00FFA2  6F88               	movwf	136,b	;volatile
   515                           
   516                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
   517   00FFA4  0E00               	movlw	0
   518   00FFA6  6F87               	movwf	135,b	;volatile
   519                           
   520                           ;mcc_generated_files/system/src/pins.c: 120:     CLCIN0PPS = 0x0;
   521   00FFA8  0E00               	movlw	0
   522   00FFAA  6F61               	movwf	97,b	;volatile
   523                           
   524                           ;mcc_generated_files/system/src/pins.c: 121:     CLCIN1PPS = 0x1;
   525   00FFAC  0E01               	movlw	1
   526   00FFAE  6F62               	movwf	98,b	;volatile
   527                           
   528                           ;mcc_generated_files/system/src/pins.c: 122:     CLCIN2PPS = 0xA;
   529   00FFB0  0E0A               	movlw	10
   530   00FFB2  6F63               	movwf	99,b	;volatile
   531                           
   532                           ;mcc_generated_files/system/src/pins.c: 123:     CLCIN3PPS = 0xB;
   533   00FFB4  0E0B               	movlw	11
   534   00FFB6  6F64               	movwf	100,b	;volatile
   535                           
   536                           ;mcc_generated_files/system/src/pins.c: 124:     RA2PPS = 0x01;
   537   00FFB8  0E01               	movlw	1
   538   00FFBA  6F03               	movwf	3,b	;volatile
   539                           
   540                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAP = 0x0;
   541   00FFBC  0E00               	movlw	0
   542   00FFBE  0104               	movlb	4	; () banked
   543   00FFC0  6F05               	movwf	5,b	;volatile
   544                           
   545                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAN = 0x0;
   546   00FFC2  0E00               	movlw	0
   547   00FFC4  6F06               	movwf	6,b	;volatile
   548                           
   549                           ;mcc_generated_files/system/src/pins.c: 131:     IOCAF = 0x0;
   550   00FFC6  0E00               	movlw	0
   551   00FFC8  6F07               	movwf	7,b	;volatile
   552                           
   553                           ;mcc_generated_files/system/src/pins.c: 132:     IOCWP = 0x0;
   554   00FFCA  0E00               	movlw	0
   555   00FFCC  6F3D               	movwf	61,b	;volatile
   556                           
   557                           ;mcc_generated_files/system/src/pins.c: 133:     IOCWN = 0x0;
   558   00FFCE  0E00               	movlw	0
   559   00FFD0  6F3E               	movwf	62,b	;volatile
   560                           
   561                           ;mcc_generated_files/system/src/pins.c: 134:     IOCWF = 0x0;
   562   00FFD2  0E00               	movlw	0
   563   00FFD4  6F3F               	movwf	63,b	;volatile
   564                           
   565                           ;mcc_generated_files/system/src/pins.c: 135:     IOCBP = 0x0;
   566   00FFD6  0E00               	movlw	0
   567   00FFD8  6F0D               	movwf	13,b	;volatile
   568                           
   569                           ;mcc_generated_files/system/src/pins.c: 136:     IOCBN = 0x0;
   570   00FFDA  0E00               	movlw	0
   571   00FFDC  6F0E               	movwf	14,b	;volatile
   572                           
   573                           ;mcc_generated_files/system/src/pins.c: 137:     IOCBF = 0x0;
   574   00FFDE  0E00               	movlw	0
   575   00FFE0  6F0F               	movwf	15,b	;volatile
   576                           
   577                           ;mcc_generated_files/system/src/pins.c: 138:     IOCCP = 0x0;
   578   00FFE2  0E00               	movlw	0
   579   00FFE4  6F15               	movwf	21,b	;volatile
   580                           
   581                           ;mcc_generated_files/system/src/pins.c: 139:     IOCCN = 0x0;
   582   00FFE6  0E00               	movlw	0
   583   00FFE8  6F16               	movwf	22,b	;volatile
   584                           
   585                           ;mcc_generated_files/system/src/pins.c: 140:     IOCCF = 0x0;
   586   00FFEA  0E00               	movlw	0
   587   00FFEC  6F17               	movwf	23,b	;volatile
   588                           
   589                           ;mcc_generated_files/system/src/pins.c: 141:     IOCEP = 0x0;
   590   00FFEE  0E00               	movlw	0
   591   00FFF0  6F25               	movwf	37,b	;volatile
   592                           
   593                           ;mcc_generated_files/system/src/pins.c: 142:     IOCEN = 0x0;
   594   00FFF2  0E00               	movlw	0
   595   00FFF4  6F26               	movwf	38,b	;volatile
   596                           
   597                           ;mcc_generated_files/system/src/pins.c: 143:     IOCEF = 0x0;
   598   00FFF6  0E00               	movlw	0
   599   00FFF8  6F27               	movwf	39,b	;volatile
   600   00FFFA                     
   601                           ; BSR set to: 4
   602   00FFFA  0012               	return		;funcret
   603   00FFFC                     __end_of_PIN_MANAGER_Initialize:
   604                           	callstack 0
   605                           
   606 ;; *************** function _INTERRUPT_Initialize *****************
   607 ;; Defined at:
   608 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 1
   629 ;; This function calls:
   630 ;;		_INT0_SetInterruptHandler
   631 ;;		_INT1_SetInterruptHandler
   632 ;;		_INT2_SetInterruptHandler
   633 ;; This function is called by:
   634 ;;		_SYSTEM_Initialize
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text3
   639   00FED8                     __ptext3:
   640                           	callstack 0
   641   00FED8                     _INTERRUPT_Initialize:
   642                           	callstack 124
   643   00FED8                     
   644                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
   645   00FED8  9AD6               	bcf	214,5,c	;volatile
   646                           
   647                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
   648   00FEDA  90B3               	bcf	179,0,c	;volatile
   649                           
   650                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
   651   00FEDC  80D6               	bsf	214,0,c	;volatile
   652   00FEDE                     
   653                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
   654   00FEDE  0E00               	movlw	0
   655   00FEE0  6E07               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
   656   00FEE2  0E00               	movlw	0
   657   00FEE4  6E08               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   658   00FEE6  EC1E  F07F         	call	_INT0_SetInterruptHandler	;wreg free
   659   00FEEA                     
   660                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
   661   00FEEA  90B8               	bcf	184,0,c	;volatile
   662   00FEEC                     
   663                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
   664   00FEEC  82D6               	bsf	214,1,c	;volatile
   665                           
   666                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
   667   00FEEE  0E00               	movlw	0
   668   00FEF0  6E07               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
   669   00FEF2  0E00               	movlw	0
   670   00FEF4  6E08               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   671   00FEF6  EC23  F07F         	call	_INT1_SetInterruptHandler	;wreg free
   672   00FEFA                     
   673                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
   674   00FEFA  90BC               	bcf	188,0,c	;volatile
   675   00FEFC                     
   676                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
   677   00FEFC  84D6               	bsf	214,2,c	;volatile
   678                           
   679                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
   680   00FEFE  0E00               	movlw	0
   681   00FF00  6E07               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
   682   00FF02  0E00               	movlw	0
   683   00FF04  6E08               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   684   00FF06  EC28  F07F         	call	_INT2_SetInterruptHandler	;wreg free
   685   00FF0A  0012               	return		;funcret
   686   00FF0C                     __end_of_INTERRUPT_Initialize:
   687                           	callstack 0
   688                           
   689 ;; *************** function _INT2_SetInterruptHandler *****************
   690 ;; Defined at:
   691 ;;		line 144 in file "mcc_generated_files/system/src/interrupt.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   694 ;;		 -> INT2_DefaultInterruptHandler(1), 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;Total ram usage:        2 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_INTERRUPT_Initialize
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text4
   720   00FE50                     __ptext4:
   721                           	callstack 0
   722   00FE50                     _INT2_SetInterruptHandler:
   723                           	callstack 124
   724   00FE50                     
   725                           ;mcc_generated_files/system/src/interrupt.c: 145:     INT2_InterruptHandler = InterruptH
      +                          andler;
   726   00FE50  C507  F501         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   727   00FE54  C508  F502         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   728   00FE58  0012               	return		;funcret
   729   00FE5A                     __end_of_INT2_SetInterruptHandler:
   730                           	callstack 0
   731                           
   732 ;; *************** function _INT1_SetInterruptHandler *****************
   733 ;; Defined at:
   734 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   737 ;;		 -> INT1_DefaultInterruptHandler(1), 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;Total ram usage:        2 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_INTERRUPT_Initialize
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text5
   763   00FE46                     __ptext5:
   764                           	callstack 0
   765   00FE46                     _INT1_SetInterruptHandler:
   766                           	callstack 124
   767   00FE46                     
   768                           ;mcc_generated_files/system/src/interrupt.c: 119:     INT1_InterruptHandler = InterruptH
      +                          andler;
   769   00FE46  C507  F503         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   770   00FE4A  C508  F504         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   771   00FE4E  0012               	return		;funcret
   772   00FE50                     __end_of_INT1_SetInterruptHandler:
   773                           	callstack 0
   774                           
   775 ;; *************** function _INT0_SetInterruptHandler *****************
   776 ;; Defined at:
   777 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   780 ;;		 -> INT0_DefaultInterruptHandler(1), 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        2 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_INTERRUPT_Initialize
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text6
   806   00FE3C                     __ptext6:
   807                           	callstack 0
   808   00FE3C                     _INT0_SetInterruptHandler:
   809                           	callstack 124
   810   00FE3C                     
   811                           ;mcc_generated_files/system/src/interrupt.c: 93:     INT0_InterruptHandler = InterruptHa
      +                          ndler;
   812   00FE3C  C507  F505         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
   813   00FE40  C508  F506         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
   814   00FE44  0012               	return		;funcret
   815   00FE46                     __end_of_INT0_SetInterruptHandler:
   816                           	callstack 0
   817                           
   818 ;; *************** function _CLOCK_Initialize *****************
   819 ;; Defined at:
   820 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_SYSTEM_Initialize
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text7
   848   00FE82                     __ptext7:
   849                           	callstack 0
   850   00FE82                     _CLOCK_Initialize:
   851                           	callstack 125
   852   00FE82                     
   853                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x60;
   854   00FE82  0E60               	movlw	96
   855   00FE84  0100               	movlb	0	; () banked
   856   00FE86  6FAD               	movwf	173,b	;volatile
   857                           
   858                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x40;
   859   00FE88  0E40               	movlw	64
   860   00FE8A  6FAF               	movwf	175,b	;volatile
   861                           
   862                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
   863   00FE8C  0E00               	movlw	0
   864   00FE8E  6FB3               	movwf	179,b	;volatile
   865                           
   866                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x8;
   867   00FE90  0E08               	movlw	8
   868   00FE92  6FB1               	movwf	177,b	;volatile
   869                           
   870                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
   871   00FE94  0E00               	movlw	0
   872   00FE96  6FB0               	movwf	176,b	;volatile
   873                           
   874                           ;mcc_generated_files/system/src/clock.c: 51:     ACTCON = 0x40;
   875   00FE98  0E40               	movlw	64
   876   00FE9A  6FAC               	movwf	172,b	;volatile
   877                           
   878                           ;mcc_generated_files/system/src/clock.c: 53:     FSCMCON = 0x0;
   879   00FE9C  0E00               	movlw	0
   880   00FE9E  0104               	movlb	4	; () banked
   881   00FEA0  6F58               	movwf	88,b	;volatile
   882   00FEA2                     
   883                           ; BSR set to: 4
   884   00FEA2  0012               	return		;funcret
   885   00FEA4                     __end_of_CLOCK_Initialize:
   886                           	callstack 0
   887                           
   888 ;; *************** function _CLC1_Initialize *****************
   889 ;; Defined at:
   890 ;;		line 38 in file "mcc_generated_files/clc/src/clc1.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_SYSTEM_Initialize
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text8
   918   00FEA4                     __ptext8:
   919                           	callstack 0
   920   00FEA4                     _CLC1_Initialize:
   921                           	callstack 125
   922   00FEA4                     
   923                           ;mcc_generated_files/clc/src/clc1.c: 42:     CLCSELECT = 0x0;
   924   00FEA4  0E00               	movlw	0
   925   00FEA6  0100               	movlb	0	; () banked
   926   00FEA8  6FD5               	movwf	213,b	;volatile
   927                           
   928                           ;mcc_generated_files/clc/src/clc1.c: 44:     CLCnPOL = 0x0;
   929   00FEAA  0E00               	movlw	0
   930   00FEAC  6FD7               	movwf	215,b	;volatile
   931                           
   932                           ;mcc_generated_files/clc/src/clc1.c: 46:     CLCnSEL0 = 0x0;
   933   00FEAE  0E00               	movlw	0
   934   00FEB0  6FD8               	movwf	216,b	;volatile
   935                           
   936                           ;mcc_generated_files/clc/src/clc1.c: 48:     CLCnSEL1 = 0x1;
   937   00FEB2  0E01               	movlw	1
   938   00FEB4  6FD9               	movwf	217,b	;volatile
   939                           
   940                           ;mcc_generated_files/clc/src/clc1.c: 50:     CLCnSEL2 = 0x2;
   941   00FEB6  0E02               	movlw	2
   942   00FEB8  6FDA               	movwf	218,b	;volatile
   943                           
   944                           ;mcc_generated_files/clc/src/clc1.c: 52:     CLCnSEL3 = 0x3;
   945   00FEBA  0E03               	movlw	3
   946   00FEBC  6FDB               	movwf	219,b	;volatile
   947                           
   948                           ;mcc_generated_files/clc/src/clc1.c: 54:     CLCnGLS0 = 0x2;
   949   00FEBE  0E02               	movlw	2
   950   00FEC0  6FDC               	movwf	220,b	;volatile
   951                           
   952                           ;mcc_generated_files/clc/src/clc1.c: 56:     CLCnGLS1 = 0x8;
   953   00FEC2  0E08               	movlw	8
   954   00FEC4  6FDD               	movwf	221,b	;volatile
   955                           
   956                           ;mcc_generated_files/clc/src/clc1.c: 58:     CLCnGLS2 = 0x20;
   957   00FEC6  0E20               	movlw	32
   958   00FEC8  6FDE               	movwf	222,b	;volatile
   959                           
   960                           ;mcc_generated_files/clc/src/clc1.c: 60:     CLCnGLS3 = 0x80;
   961   00FECA  0E80               	movlw	128
   962   00FECC  6FDF               	movwf	223,b	;volatile
   963                           
   964                           ;mcc_generated_files/clc/src/clc1.c: 62:     CLCDATA = 0x0;
   965   00FECE  0E00               	movlw	0
   966   00FED0  6FD4               	movwf	212,b	;volatile
   967                           
   968                           ;mcc_generated_files/clc/src/clc1.c: 64:     CLCnCON = 0x82;
   969   00FED2  0E82               	movlw	130
   970   00FED4  6FD6               	movwf	214,b	;volatile
   971   00FED6                     
   972                           ; BSR set to: 0
   973   00FED6  0012               	return		;funcret
   974   00FED8                     __end_of_CLC1_Initialize:
   975                           	callstack 0
   976   000000                     
   977                           	psect	rparam
   978   000000                     
   979                           	psect	config
   980                           
   981                           ;Config register CONFIG1 @ 0x300000
   982                           ;	External Oscillator Selection
   983                           ;	FEXTOSC = OFF, Oscillator not enabled
   984                           ;	Reset Oscillator Selection
   985                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
   986   300000                     	org	3145728
   987   300000  EC                 	db	236
   988                           
   989                           ;Config register CONFIG2 @ 0x300001
   990                           ;	Clock out Enable bit
   991                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   992                           ;	PRLOCKED One-Way Set Enable bit
   993                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
   994                           ;	Boot Block enable bit
   995                           ;	BBEN = OFF, Boot block disabled
   996                           ;	Clock Switch Enable bit
   997                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   998                           ;	Fail-Safe Clock Monitor Enable bit
   999                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1000                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  1001                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  1002                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  1003                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  1004   300001                     	org	3145729
  1005   300001  FF                 	db	255
  1006                           
  1007                           ;Config register CONFIG3 @ 0x300002
  1008                           ;	MCLR Enable bit
  1009                           ;	MCLRE = INTMCLR, If LVP = 0, MCLR pin function is port defined function; If LVP =1, RE
      +                          3 pin fuction is MCLR
  1010                           ;	Power-up timer selection bits
  1011                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1012                           ;	Multi-vector enable bit
  1013                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1014                           ;	IVTLOCK bit One-way set enable bit
  1015                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1016                           ;	Low Power BOR Enable bit
  1017                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1018                           ;	Brown-out Reset Enable bits
  1019                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1020   300002                     	org	3145730
  1021   300002  F6                 	db	246
  1022                           
  1023                           ;Config register CONFIG4 @ 0x300003
  1024                           ;	Brown-out Reset Voltage Selection bits
  1025                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1026                           ;	ZCD Disable bit
  1027                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1028                           ;	PPSLOCK bit One-Way Set Enable bit
  1029                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1030                           ;	Stack Full/Underflow Reset Enable bit
  1031                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1032                           ;	Low Voltage Programming Enable bit
  1033                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1034                           ;	Background Debugger
  1035                           ;	DEBUG = OFF, Background Debugger disabled
  1036                           ;	Extended Instruction Set Enable bit
  1037                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1038   300003                     	org	3145731
  1039   300003  FF                 	db	255
  1040                           
  1041                           ;Config register CONFIG5 @ 0x300004
  1042                           ;	WDT Period selection bits
  1043                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1044                           ;	WDT operating mode
  1045                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1046   300004                     	org	3145732
  1047   300004  9F                 	db	159
  1048                           
  1049                           ;Config register CONFIG6 @ 0x300005
  1050                           ;	WDT Window Select bits
  1051                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1052                           ;	WDT input clock selector
  1053                           ;	WDTCCS = SC, Software Control
  1054   300005                     	org	3145733
  1055   300005  FF                 	db	255
  1056                           
  1057                           ;Config register CONFIG7 @ 0x300006
  1058                           ;	Boot Block Size Selection bits
  1059                           ;	BBSIZE = BBSIZE_16384, Boot Block size is 16384 words
  1060   300006                     	org	3145734
  1061   300006  7F                 	db	127
  1062                           
  1063                           ;Config register CONFIG8 @ 0x300007
  1064                           ;	SAF Block Size Selection bits
  1065                           ;	SAFSZ = SAFSZ_NONE, NONE
  1066   300007                     	org	3145735
  1067   300007  FF                 	db	255
  1068                           
  1069                           ;Config register CONFIG9 @ 0x300008
  1070                           ;	Boot Block Write Protection bit
  1071                           ;	WRTB = OFF, Boot Block not Write protected
  1072                           ;	Configuration Register Write Protection bit
  1073                           ;	WRTC = OFF, Configuration registers not Write protected
  1074                           ;	Data EEPROM Write Protection bit
  1075                           ;	WRTD = OFF, Data EEPROM not Write protected
  1076                           ;	SAF Write protection bit
  1077                           ;	WRTSAF = OFF, SAF not Write Protected
  1078                           ;	Application Block write protection bit
  1079                           ;	WRTAPP = OFF, Application Block not write protected
  1080   300008                     	org	3145736
  1081   300008  FF                 	db	255
  1082                           
  1083                           ;Config register CONFIG10 @ 0x300009
  1084                           ;	Data EEPROM Code Protection bit
  1085                           ;	CPD = OFF, Data EEPROM code protection disabled
  1086   300009                     	org	3145737
  1087   300009  FF                 	db	255
  1088                           
  1089                           ;Config register CONFIG11 @ 0x30000A
  1090                           ;	PFM Code Protection bit
  1091                           ;	CP = OFF, PFM code protection disabled
  1092   30000A                     	org	3145738
  1093   30000A  FF                 	db	255
  1094                           tosu	equ	0x4FF
  1095                           tosh	equ	0x4FE
  1096                           tosl	equ	0x4FD
  1097                           stkptr	equ	0x4FC
  1098                           pclatu	equ	0x4FB
  1099                           pclath	equ	0x4FA
  1100                           pcl	equ	0x4F9
  1101                           tblptru	equ	0x4F8
  1102                           tblptrh	equ	0x4F7
  1103                           tblptrl	equ	0x4F6
  1104                           tablat	equ	0x4F5
  1105                           prodh	equ	0x4F4
  1106                           prodl	equ	0x4F3
  1107                           indf0	equ	0x4EF
  1108                           postinc0	equ	0x4EE
  1109                           postdec0	equ	0x4ED
  1110                           preinc0	equ	0x4EC
  1111                           plusw0	equ	0x4EB
  1112                           fsr0h	equ	0x4EA
  1113                           fsr0l	equ	0x4E9
  1114                           wreg	equ	0x4E8
  1115                           indf1	equ	0x4E7
  1116                           postinc1	equ	0x4E6
  1117                           postdec1	equ	0x4E5
  1118                           preinc1	equ	0x4E4
  1119                           plusw1	equ	0x4E3
  1120                           fsr1h	equ	0x4E2
  1121                           fsr1l	equ	0x4E1
  1122                           bsr	equ	0x4E0
  1123                           indf2	equ	0x4DF
  1124                           postinc2	equ	0x4DE
  1125                           postdec2	equ	0x4DD
  1126                           preinc2	equ	0x4DC
  1127                           plusw2	equ	0x4DB
  1128                           fsr2h	equ	0x4DA
  1129                           fsr2l	equ	0x4D9
  1130                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       8
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT2_DefaultInterruptHandler(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT1_DefaultInterruptHandler(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     294
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _CLC1_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       8       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBIGSFR_1        100      0       0      36        0.0%
BIGRAM             FFF      0       0      37        0.0%
BITBIGSFRhhhhh      29      0       0      38        0.0%
BITBIGSFRhhhhlh     19      0       0      39        0.0%
BITBIGSFRhhhhlh      3      0       0      40        0.0%
BITBIGSFRhhhhlh      4      0       0      41        0.0%
BITBIGSFRhhhhll     5A      0       0      42        0.0%
BITBIGSFRhhhlhh     18      0       0      43        0.0%
BITBIGSFRhhhlhh     10      0       0      44        0.0%
BITBIGSFRhhhlhh      3      0       0      45        0.0%
BITBIGSFRhhhlhh    177      0       0      46        0.0%
BITBIGSFRhhhlhh     20      0       0      47        0.0%
BITBIGSFRhhhlhh     5D      0       0      48        0.0%
BITBIGSFRhhhlhh     B5      0       0      49        0.0%
BITBIGSFRhhhlhh      2      0       0      50        0.0%
BITBIGSFRhhhlhh     60      0       0      51        0.0%
BITBIGSFRhhhll      20      0       0      52        0.0%
BITBIGSFRhhlh        1      0       0      53        0.0%
BITBIGSFRhl          1      0       0      54        0.0%
BITBIGSFRl          AC      0       0      55        0.0%
ABS                  0      0       8      56        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Dec 21 20:59:25 2024

                                      l17 FEA2                                        l28 FE80  
                                      l63 FF0A                                        l73 FE44  
                                      l86 FE4E                                        l99 FE58  
                                     l133 FED6                                       l277 FFFA  
                                     l287 FE68                                       l288 FE68  
                                     l972 FE82                                       l980 FF2E  
                                     l990 FF7A                                       l982 FF34  
                                     l974 FF0C                                       l992 FF7C  
                                     l984 FF40                                       l976 FF2A  
                                     l994 FF7E                                       l986 FF42  
                                     l978 FF2C                                       l996 FF80  
                                     l988 FF48                                       l998 FF86  
              ??_INT0_SetInterruptHandler 0509                                      l1000 FF88  
                                    l1010 FEA4                                      l1002 FF8A  
                                    l1004 FF8C                                      l1006 FF8E  
                                    l1008 FF94                                      l1062 FE3C  
                                    l1070 FEDE                                      l1064 FE46  
                                    l1072 FEEA                                      l1080 FE70  
                                    l1066 FE50                                      l1074 FEEC  
                                    l1082 FE7C                                      l1076 FEFA  
                                    l1068 FED8                                      l1084 FE64  
                                    l1078 FEFC                                      _LATA 0140  
                                    _LATB 0141                                      _LATC 0142  
                                    _LATD 0143                                      _LATE 0144  
                                    _LATF 0145                                      _WPUA 0401  
                                    _WPUB 0409                                      _WPUC 0411  
                                    _WPUD 0419                                      _WPUE 0421  
                                    _WPUF 0429                                      _main FE64  
               ?_INT2_SetInterruptHandler 0507                                      start FFFC  
                            ___param_bank 0000                                     ?_main 0507  
                                   _IOCAF 0407                                     _IOCBF 040F  
                                   _IOCCF 0417                                     _IOCAN 0406  
                                   _IOCEF 0427                                     _IOCAP 0405  
                                   _IOCBN 040E                                     _IOCBP 040D  
                                   _IOCCN 0416                                     _IOCCP 0415  
                                   _IOCEN 0426                                     _IOCEP 0425  
                                   _IOCWF 043F                                     _IOCWN 043E  
                                   _IOCWP 043D                                     _OSCEN 00B3  
                                   _TRISA 0148                                     _TRISB 0149  
                                   _TRISC 014A                                     _TRISD 014B  
                                   _TRISE 014C                                     _TRISF 014D  
                _INT1_SetInterruptHandler FE46                           __initialization FE5A  
                            __end_of_main FE70                                    ??_main 0509  
                           __activetblptr 0002                                    _ACTCON 00AC  
                                  _ANSELA 0400                                    _ANSELB 0408  
                                  _ANSELC 0410                                    _ANSELD 0418  
                                  _ANSELE 0420                                    _ANSELF 0428  
                                  _RB1I2C 0286                                    _RB2I2C 0285  
                                  _RC3I2C 0288                                    _RC4I2C 0287  
                                  _RA2PPS 0203                                    _ODCONA 0402  
                                  _ODCONB 040A                                    _ODCONC 0412  
                                  _ODCOND 041A                                    _ODCONE 0422  
                                  _ODCONF 042A                                    _INLVLA 0404  
                                  _INLVLB 040C                                    _INLVLC 0414  
                                  _INLVLD 041C                                    _INLVLE 0424  
                                  _INLVLF 042C                                    _OSCFRQ 00B1  
                                  isa$std 0001                         ?_CLOCK_Initialize 0507  
            _INT2_DefaultInterruptHandler 0000                        ??_CLOCK_Initialize 0507  
                                  tblptru 04F8  INT2_SetInterruptHandler@InterruptHandler 0507  
INT1_SetInterruptHandler@InterruptHandler 0507  INT0_SetInterruptHandler@InterruptHandler 0507  
                         _CLC1_Initialize FEA4                         _SYSTEM_Initialize FE70  
                              __accesstop 0560                   __end_of__initialization FE5A  
                      ?_SYSTEM_Initialize 0507                             ___rparam_used 0001  
                          __pcstackCOMRAM 0507                       ??_SYSTEM_Initialize 0509  
        __end_of_INT2_SetInterruptHandler FE5A                 __end_of_SYSTEM_Initialize FE82  
                   _INT0_InterruptHandler 0505                                __pnvCOMRAM 0501  
                                 _CLCDATA 00D4                                   _CLCnCON 00D6  
                                 _CLCnPOL 00D7                                   _FSCMCON 0458  
                 __end_of_CLC1_Initialize FED8                ??_INT1_SetInterruptHandler 0509  
                                 _OSCCON1 00AD                                   _OSCCON3 00AF  
                                 _OSCTUNE 00B0                                   _SLRCONA 0403  
                                 _SLRCONB 040B                                   _SLRCONC 0413  
                                 _SLRCOND 041B                                   _SLRCONE 0423  
                                 _SLRCONF 042B                 ?_INT0_SetInterruptHandler 0507  
                               _CLCIN0PPS 0261                                 _CLCIN1PPS 0262  
                               _CLCIN2PPS 0263                                 _CLCIN3PPS 0264  
                                 __Hparam 0000                                   __Lparam 0000  
                               _CLCSELECT 00D5                                   __pcinit FE5A  
                                 __ramtop 1600                                   __ptext0 FE64  
                                 __ptext1 FE70                                   __ptext2 FF0C  
                                 __ptext3 FED8                                   __ptext4 FE50  
                                 __ptext5 FE46                                   __ptext6 FE3C  
                                 __ptext7 FE82                                   __ptext8 FEA4  
                ??_PIN_MANAGER_Initialize 0507                      end_of_initialization FE5A  
                _INT2_SetInterruptHandler FE50                                 _PIR10bits 04BC  
                           __Lmediumconst 0000                     _INT1_InterruptHandler 0503  
                        ?_CLC1_Initialize 0507              __end_of_INTERRUPT_Initialize FF0C  
            _INT0_DefaultInterruptHandler 0000                       start_initialization FE5A  
                             _CLCDATAbits 00D4          __end_of_INT0_SetInterruptHandler FE46  
                   _INT2_InterruptHandler 0501                    _PIN_MANAGER_Initialize FF0C  
                             _CLCnCONbits 00D6                ??_INT2_SetInterruptHandler 0509  
                                _CLCnGLS0 00DC                                  _CLCnGLS1 00DD  
                                _CLCnGLS2 00DE                                  _CLCnGLS3 00DF  
                                _CLCnSEL0 00D8                                  _CLCnSEL1 00D9  
                                _CLCnSEL2 00DA                                  _CLCnSEL3 00DB  
                    _INTERRUPT_Initialize FED8                          _CLOCK_Initialize FE82  
               ?_INT1_SetInterruptHandler 0507                                  _PIR1bits 04B3  
                                _PIR6bits 04B8                               _INTCON0bits 04D6  
                   ?_INTERRUPT_Initialize 0507                  _INT0_SetInterruptHandler FE3C  
                                __Hrparam 0000                                  __Lrparam 0000  
                                isa$xinst 0000              _INT1_DefaultInterruptHandler 0000  
                  ??_INTERRUPT_Initialize 0509                   ?_PIN_MANAGER_Initialize 0507  
                __end_of_CLOCK_Initialize FEA4          __end_of_INT1_SetInterruptHandler FE50  
          __end_of_PIN_MANAGER_Initialize FFFC                         ??_CLC1_Initialize 0507  
