

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Dec 22 06:33:41 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46Q71
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/02/2024 GMT
    22                           ; 
    23                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46Q71 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    57   000000                     
    58 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    59   000000                     
    60 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    61   000000                     _IOCCF	set	1047
    62   000000                     _IOCCN	set	1046
    63   000000                     _IOCCP	set	1045
    64   000000                     _IOCBF	set	1039
    65   000000                     _IOCBN	set	1038
    66   000000                     _IOCBP	set	1037
    67   000000                     _IOCAF	set	1031
    68   000000                     _IOCAN	set	1030
    69   000000                     _IOCAP	set	1029
    70   000000                     _RC4I2C	set	647
    71   000000                     _RC3I2C	set	648
    72   000000                     _INLVLC	set	1044
    73   000000                     _INLVLB	set	1036
    74   000000                     _INLVLA	set	1028
    75   000000                     _SLRCONC	set	1043
    76   000000                     _SLRCONB	set	1035
    77   000000                     _SLRCONA	set	1027
    78   000000                     _ODCONC	set	1042
    79   000000                     _ODCONB	set	1034
    80   000000                     _ODCONA	set	1026
    81   000000                     _WPUC	set	1041
    82   000000                     _WPUB	set	1033
    83   000000                     _WPUA	set	1025
    84   000000                     _ANSELD	set	1048
    85   000000                     _ANSELC	set	1040
    86   000000                     _ANSELB	set	1032
    87   000000                     _OSCTUNE	set	176
    88   000000                     _OSCFRQ	set	177
    89   000000                     _OSCEN	set	179
    90   000000                     _CLCnCON	set	214
    91   000000                     _CLCnPOL	set	215
    92                           
    93                           	psect	nvCOMRAM
    94   000501                     __pnvCOMRAM:
    95                           	callstack 0
    96   000501                     _INT2_InterruptHandler:
    97                           	callstack 0
    98   000501                     	ds	2
    99   000503                     _INT1_InterruptHandler:
   100                           	callstack 0
   101   000503                     	ds	2
   102   000505                     _INT0_InterruptHandler:
   103                           	callstack 0
   104   000505                     	ds	2
   105   000000                     _CLCDATAbits	set	212
   106   000000                     _CLCnCONbits	set	214
   107   000000                     _ACTCON	set	172
   108   000000                     _OSCCON1	set	173
   109   000000                     _CLCDATA	set	212
   110   000000                     _CLCSELECT	set	213
   111   000000                     _LATA	set	320
   112   000000                     _FSCMCON	set	1112
   113   000000                     _CLCnGLS3	set	223
   114   000000                     _CLCnGLS2	set	222
   115   000000                     _CLCnGLS1	set	221
   116   000000                     _CLCnGLS0	set	220
   117   000000                     _CLCnSEL3	set	219
   118   000000                     _CLCnSEL2	set	218
   119   000000                     _CLCnSEL1	set	217
   120   000000                     _CLCnSEL0	set	216
   121   000000                     _OSCCON3	set	175
   122   000000                     _PIR1bits	set	1203
   123   000000                     _INTCON0bits	set	1238
   124   000000                     _PIR6bits	set	1208
   125   000000                     _PIR10bits	set	1212
   126   000000                     _TRISA	set	328
   127   000000                     _LATE	set	324
   128   000000                     _LATD	set	323
   129   000000                     _LATC	set	322
   130   000000                     _LATB	set	321
   131   000000                     _RA2PPS	set	515
   132   000000                     _CLCIN0PPS	set	609
   133   000000                     _RB2I2C	set	645
   134   000000                     _RB1I2C	set	646
   135   000000                     _ANSELA	set	1024
   136   000000                     _TRISE	set	332
   137   000000                     _TRISD	set	331
   138   000000                     _TRISC	set	330
   139   000000                     _TRISB	set	329
   140   000000                     _INLVLD	set	1052
   141   000000                     _SLRCOND	set	1051
   142   000000                     _ODCOND	set	1050
   143   000000                     _WPUD	set	1049
   144   000000                     _ANSELE	set	1056
   145   000000                     _IOCEF	set	1063
   146   000000                     _IOCEN	set	1062
   147   000000                     _IOCEP	set	1061
   148   000000                     _IOCWP	set	1085
   149   000000                     _INLVLE	set	1060
   150   000000                     _SLRCONE	set	1059
   151   000000                     _ODCONE	set	1058
   152   000000                     _WPUE	set	1057
   153   000000                     _CLCIN1PPS	set	610
   154   000000                     _IOCWF	set	1087
   155   000000                     _IOCWN	set	1086
   156                           
   157                           ; #config settings
   158                           
   159                           	psect	cinit
   160   00FE78                     __pcinit:
   161                           	callstack 0
   162   00FE78                     start_initialization:
   163                           	callstack 0
   164   00FE78                     __initialization:
   165                           	callstack 0
   166   00FE78                     end_of_initialization:
   167                           	callstack 0
   168   00FE78                     __end_of__initialization:
   169                           	callstack 0
   170   00FE78  0E00               	movlw	low (__Lmediumconst shr (0+16))
   171   00FE7A  6EF8               	movwf	tblptru,c
   172   00FE7C  0100               	movlb	0
   173   00FE7E  EF41  F07F         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	cstackCOMRAM
   176   000507                     __pcstackCOMRAM:
   177                           	callstack 0
   178   000507                     INT0_SetInterruptHandler@InterruptHandler:
   179                           	callstack 0
   180   000507                     INT1_SetInterruptHandler@InterruptHandler:
   181                           	callstack 0
   182   000507                     INT2_SetInterruptHandler@InterruptHandler:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x0
   186   000507                     	ds	2
   187   000509                     
   188                           ; 1 bytes @ 0x2
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 39 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  2  268[None  ] int 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels required when called: 3
   214 ;; This function calls:
   215 ;;		_SYSTEM_Initialize
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text0
   222   00FE82                     __ptext0:
   223                           	callstack 0
   224   00FE82                     _main:
   225                           	callstack 124
   226   00FE82                     
   227                           ;main.c: 41:     SYSTEM_Initialize();
   228   00FE82  EC47  F07F         	call	_SYSTEM_Initialize	;wreg free
   229   00FE86                     l269:
   230   00FE86  EF43  F07F         	goto	l269
   231   00FE8A  EFFE  F07F         	goto	start
   232   00FE8E                     __end_of_main:
   233                           	callstack 0
   234                           
   235 ;; *************** function _SYSTEM_Initialize *****************
   236 ;; Defined at:
   237 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels used: 1
   257 ;; Hardware stack levels required when called: 2
   258 ;; This function calls:
   259 ;;		_CLC1_Initialize
   260 ;;		_CLOCK_Initialize
   261 ;;		_INTERRUPT_Initialize
   262 ;;		_PIN_MANAGER_Initialize
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269   00FE8E                     __ptext1:
   270                           	callstack 0
   271   00FE8E                     _SYSTEM_Initialize:
   272                           	callstack 124
   273   00FE8E                     
   274                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
   275   00FE8E  EC50  F07F         	call	_CLOCK_Initialize	;wreg free
   276                           
   277                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
   278   00FE92  EC95  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   279                           
   280                           ;mcc_generated_files/system/src/system.c: 40:     CLC1_Initialize();
   281   00FE96  EC61  F07F         	call	_CLC1_Initialize	;wreg free
   282   00FE9A                     
   283                           ;mcc_generated_files/system/src/system.c: 41:     INTERRUPT_Initialize();
   284   00FE9A  EC7B  F07F         	call	_INTERRUPT_Initialize	;wreg free
   285   00FE9E  0012               	return		;funcret
   286   00FEA0                     __end_of_SYSTEM_Initialize:
   287                           	callstack 0
   288                           
   289 ;; *************** function _PIN_MANAGER_Initialize *****************
   290 ;; Defined at:
   291 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used: 1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_SYSTEM_Initialize
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text2
   319   00FF2A                     __ptext2:
   320                           	callstack 0
   321   00FF2A                     _PIN_MANAGER_Initialize:
   322                           	callstack 125
   323   00FF2A                     
   324                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
   325   00FF2A  0E00               	movlw	0
   326   00FF2C  0101               	movlb	1	; () banked
   327   00FF2E  6F40               	movwf	64,b	;volatile
   328                           
   329                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
   330   00FF30  0E00               	movlw	0
   331   00FF32  6F41               	movwf	65,b	;volatile
   332                           
   333                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
   334   00FF34  0E00               	movlw	0
   335   00FF36  6F42               	movwf	66,b	;volatile
   336                           
   337                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
   338   00FF38  0E00               	movlw	0
   339   00FF3A  6F43               	movwf	67,b	;volatile
   340                           
   341                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
   342   00FF3C  0E00               	movlw	0
   343   00FF3E  6F44               	movwf	68,b	;volatile
   344                           
   345                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xFB;
   346   00FF40  0EFB               	movlw	251
   347   00FF42  6F48               	movwf	72,b	;volatile
   348   00FF44                     
   349                           ; BSR set to: 1
   350                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
   351   00FF44  6949               	setf	73,b	;volatile
   352   00FF46                     
   353                           ; BSR set to: 1
   354                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xFF;
   355   00FF46  694A               	setf	74,b	;volatile
   356   00FF48                     
   357                           ; BSR set to: 1
   358                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
   359   00FF48  694B               	setf	75,b	;volatile
   360                           
   361                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0xF;
   362   00FF4A  0E0F               	movlw	15
   363   00FF4C  6F4C               	movwf	76,b	;volatile
   364                           
   365                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xF8;
   366   00FF4E  0EF8               	movlw	248
   367   00FF50  0104               	movlb	4	; () banked
   368   00FF52  6F00               	movwf	0,b	;volatile
   369   00FF54                     
   370                           ; BSR set to: 4
   371                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xFF;
   372   00FF54  6908               	setf	8,b	;volatile
   373   00FF56                     
   374                           ; BSR set to: 4
   375                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0xFF;
   376   00FF56  6910               	setf	16,b	;volatile
   377   00FF58                     
   378                           ; BSR set to: 4
   379                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0xFF;
   380   00FF58  6918               	setf	24,b	;volatile
   381                           
   382                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x7;
   383   00FF5A  0E07               	movlw	7
   384   00FF5C  6F20               	movwf	32,b	;volatile
   385                           
   386                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
   387   00FF5E  0E00               	movlw	0
   388   00FF60  6F01               	movwf	1,b	;volatile
   389                           
   390                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
   391   00FF62  0E00               	movlw	0
   392   00FF64  6F09               	movwf	9,b	;volatile
   393                           
   394                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
   395   00FF66  0E00               	movlw	0
   396   00FF68  6F11               	movwf	17,b	;volatile
   397                           
   398                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
   399   00FF6A  0E00               	movlw	0
   400   00FF6C  6F19               	movwf	25,b	;volatile
   401                           
   402                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
   403   00FF6E  0E00               	movlw	0
   404   00FF70  6F21               	movwf	33,b	;volatile
   405                           
   406                           ;mcc_generated_files/system/src/pins.c: 79:     ODCONA = 0x0;
   407   00FF72  0E00               	movlw	0
   408   00FF74  6F02               	movwf	2,b	;volatile
   409                           
   410                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONB = 0x0;
   411   00FF76  0E00               	movlw	0
   412   00FF78  6F0A               	movwf	10,b	;volatile
   413                           
   414                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONC = 0x0;
   415   00FF7A  0E00               	movlw	0
   416   00FF7C  6F12               	movwf	18,b	;volatile
   417                           
   418                           ;mcc_generated_files/system/src/pins.c: 82:     ODCOND = 0x0;
   419   00FF7E  0E00               	movlw	0
   420   00FF80  6F1A               	movwf	26,b	;volatile
   421                           
   422                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONE = 0x0;
   423   00FF82  0E00               	movlw	0
   424   00FF84  6F22               	movwf	34,b	;volatile
   425   00FF86                     
   426                           ; BSR set to: 4
   427                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONA = 0xFF;
   428   00FF86  6903               	setf	3,b	;volatile
   429   00FF88                     
   430                           ; BSR set to: 4
   431                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONB = 0xFF;
   432   00FF88  690B               	setf	11,b	;volatile
   433   00FF8A                     
   434                           ; BSR set to: 4
   435                           ;mcc_generated_files/system/src/pins.c: 90:     SLRCONC = 0xFF;
   436   00FF8A  6913               	setf	19,b	;volatile
   437   00FF8C                     
   438                           ; BSR set to: 4
   439                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCOND = 0xFF;
   440   00FF8C  691B               	setf	27,b	;volatile
   441                           
   442                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONE = 0x7;
   443   00FF8E  0E07               	movlw	7
   444   00FF90  6F23               	movwf	35,b	;volatile
   445   00FF92                     
   446                           ; BSR set to: 4
   447                           ;mcc_generated_files/system/src/pins.c: 97:     INLVLA = 0xFF;
   448   00FF92  6904               	setf	4,b	;volatile
   449   00FF94                     
   450                           ; BSR set to: 4
   451                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLB = 0xFF;
   452   00FF94  690C               	setf	12,b	;volatile
   453   00FF96                     
   454                           ; BSR set to: 4
   455                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLC = 0xFF;
   456   00FF96  6914               	setf	20,b	;volatile
   457   00FF98                     
   458                           ; BSR set to: 4
   459                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLD = 0xFF;
   460   00FF98  691C               	setf	28,b	;volatile
   461                           
   462                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLE = 0xF;
   463   00FF9A  0E0F               	movlw	15
   464   00FF9C  6F24               	movwf	36,b	;volatile
   465                           
   466                           ;mcc_generated_files/system/src/pins.c: 106:     RB1I2C = 0x0;
   467   00FF9E  0E00               	movlw	0
   468   00FFA0  0102               	movlb	2	; () banked
   469   00FFA2  6F86               	movwf	134,b	;volatile
   470                           
   471                           ;mcc_generated_files/system/src/pins.c: 107:     RB2I2C = 0x0;
   472   00FFA4  0E00               	movlw	0
   473   00FFA6  6F85               	movwf	133,b	;volatile
   474                           
   475                           ;mcc_generated_files/system/src/pins.c: 108:     RC3I2C = 0x0;
   476   00FFA8  0E00               	movlw	0
   477   00FFAA  6F88               	movwf	136,b	;volatile
   478                           
   479                           ;mcc_generated_files/system/src/pins.c: 109:     RC4I2C = 0x0;
   480   00FFAC  0E00               	movlw	0
   481   00FFAE  6F87               	movwf	135,b	;volatile
   482                           
   483                           ;mcc_generated_files/system/src/pins.c: 113:     CLCIN0PPS = 0x0;
   484   00FFB0  0E00               	movlw	0
   485   00FFB2  6F61               	movwf	97,b	;volatile
   486                           
   487                           ;mcc_generated_files/system/src/pins.c: 114:     CLCIN1PPS = 0x1;
   488   00FFB4  0E01               	movlw	1
   489   00FFB6  6F62               	movwf	98,b	;volatile
   490                           
   491                           ;mcc_generated_files/system/src/pins.c: 115:     RA2PPS = 0x01;
   492   00FFB8  0E01               	movlw	1
   493   00FFBA  6F03               	movwf	3,b	;volatile
   494                           
   495                           ;mcc_generated_files/system/src/pins.c: 120:     IOCAP = 0x0;
   496   00FFBC  0E00               	movlw	0
   497   00FFBE  0104               	movlb	4	; () banked
   498   00FFC0  6F05               	movwf	5,b	;volatile
   499                           
   500                           ;mcc_generated_files/system/src/pins.c: 121:     IOCAN = 0x0;
   501   00FFC2  0E00               	movlw	0
   502   00FFC4  6F06               	movwf	6,b	;volatile
   503                           
   504                           ;mcc_generated_files/system/src/pins.c: 122:     IOCAF = 0x0;
   505   00FFC6  0E00               	movlw	0
   506   00FFC8  6F07               	movwf	7,b	;volatile
   507                           
   508                           ;mcc_generated_files/system/src/pins.c: 123:     IOCWP = 0x0;
   509   00FFCA  0E00               	movlw	0
   510   00FFCC  6F3D               	movwf	61,b	;volatile
   511                           
   512                           ;mcc_generated_files/system/src/pins.c: 124:     IOCWN = 0x0;
   513   00FFCE  0E00               	movlw	0
   514   00FFD0  6F3E               	movwf	62,b	;volatile
   515                           
   516                           ;mcc_generated_files/system/src/pins.c: 125:     IOCWF = 0x0;
   517   00FFD2  0E00               	movlw	0
   518   00FFD4  6F3F               	movwf	63,b	;volatile
   519                           
   520                           ;mcc_generated_files/system/src/pins.c: 126:     IOCBP = 0x0;
   521   00FFD6  0E00               	movlw	0
   522   00FFD8  6F0D               	movwf	13,b	;volatile
   523                           
   524                           ;mcc_generated_files/system/src/pins.c: 127:     IOCBN = 0x0;
   525   00FFDA  0E00               	movlw	0
   526   00FFDC  6F0E               	movwf	14,b	;volatile
   527                           
   528                           ;mcc_generated_files/system/src/pins.c: 128:     IOCBF = 0x0;
   529   00FFDE  0E00               	movlw	0
   530   00FFE0  6F0F               	movwf	15,b	;volatile
   531                           
   532                           ;mcc_generated_files/system/src/pins.c: 129:     IOCCP = 0x0;
   533   00FFE2  0E00               	movlw	0
   534   00FFE4  6F15               	movwf	21,b	;volatile
   535                           
   536                           ;mcc_generated_files/system/src/pins.c: 130:     IOCCN = 0x0;
   537   00FFE6  0E00               	movlw	0
   538   00FFE8  6F16               	movwf	22,b	;volatile
   539                           
   540                           ;mcc_generated_files/system/src/pins.c: 131:     IOCCF = 0x0;
   541   00FFEA  0E00               	movlw	0
   542   00FFEC  6F17               	movwf	23,b	;volatile
   543                           
   544                           ;mcc_generated_files/system/src/pins.c: 132:     IOCEP = 0x0;
   545   00FFEE  0E00               	movlw	0
   546   00FFF0  6F25               	movwf	37,b	;volatile
   547                           
   548                           ;mcc_generated_files/system/src/pins.c: 133:     IOCEN = 0x0;
   549   00FFF2  0E00               	movlw	0
   550   00FFF4  6F26               	movwf	38,b	;volatile
   551                           
   552                           ;mcc_generated_files/system/src/pins.c: 134:     IOCEF = 0x0;
   553   00FFF6  0E00               	movlw	0
   554   00FFF8  6F27               	movwf	39,b	;volatile
   555   00FFFA                     
   556                           ; BSR set to: 4
   557   00FFFA  0012               	return		;funcret
   558   00FFFC                     __end_of_PIN_MANAGER_Initialize:
   559                           	callstack 0
   560                           
   561 ;; *************** function _INTERRUPT_Initialize *****************
   562 ;; Defined at:
   563 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 1
   584 ;; This function calls:
   585 ;;		_INT0_SetInterruptHandler
   586 ;;		_INT1_SetInterruptHandler
   587 ;;		_INT2_SetInterruptHandler
   588 ;; This function is called by:
   589 ;;		_SYSTEM_Initialize
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text3
   594   00FEF6                     __ptext3:
   595                           	callstack 0
   596   00FEF6                     _INTERRUPT_Initialize:
   597                           	callstack 124
   598   00FEF6                     
   599                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
   600   00FEF6  9AD6               	bcf	214,5,c	;volatile
   601                           
   602                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
   603   00FEF8  90B3               	bcf	179,0,c	;volatile
   604                           
   605                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
   606   00FEFA  80D6               	bsf	214,0,c	;volatile
   607   00FEFC                     
   608                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
   609   00FEFC  0E00               	movlw	0
   610   00FEFE  6E07               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
   611   00FF00  0E00               	movlw	0
   612   00FF02  6E08               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   613   00FF04  EC2D  F07F         	call	_INT0_SetInterruptHandler	;wreg free
   614   00FF08                     
   615                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
   616   00FF08  90B8               	bcf	184,0,c	;volatile
   617   00FF0A                     
   618                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
   619   00FF0A  82D6               	bsf	214,1,c	;volatile
   620                           
   621                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
   622   00FF0C  0E00               	movlw	0
   623   00FF0E  6E07               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
   624   00FF10  0E00               	movlw	0
   625   00FF12  6E08               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   626   00FF14  EC32  F07F         	call	_INT1_SetInterruptHandler	;wreg free
   627   00FF18                     
   628                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
   629   00FF18  90BC               	bcf	188,0,c	;volatile
   630   00FF1A                     
   631                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
   632   00FF1A  84D6               	bsf	214,2,c	;volatile
   633                           
   634                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
   635   00FF1C  0E00               	movlw	0
   636   00FF1E  6E07               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
   637   00FF20  0E00               	movlw	0
   638   00FF22  6E08               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   639   00FF24  EC37  F07F         	call	_INT2_SetInterruptHandler	;wreg free
   640   00FF28  0012               	return		;funcret
   641   00FF2A                     __end_of_INTERRUPT_Initialize:
   642                           	callstack 0
   643                           
   644 ;; *************** function _INT2_SetInterruptHandler *****************
   645 ;; Defined at:
   646 ;;		line 144 in file "mcc_generated_files/system/src/interrupt.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   649 ;;		 -> INT2_DefaultInterruptHandler(1), 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_INTERRUPT_Initialize
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text4
   675   00FE6E                     __ptext4:
   676                           	callstack 0
   677   00FE6E                     _INT2_SetInterruptHandler:
   678                           	callstack 124
   679   00FE6E                     
   680                           ;mcc_generated_files/system/src/interrupt.c: 145:     INT2_InterruptHandler = InterruptH
      +                          andler;
   681   00FE6E  C507  F501         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   682   00FE72  C508  F502         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   683   00FE76  0012               	return		;funcret
   684   00FE78                     __end_of_INT2_SetInterruptHandler:
   685                           	callstack 0
   686                           
   687 ;; *************** function _INT1_SetInterruptHandler *****************
   688 ;; Defined at:
   689 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   692 ;;		 -> INT1_DefaultInterruptHandler(1), 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_INTERRUPT_Initialize
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text5
   718   00FE64                     __ptext5:
   719                           	callstack 0
   720   00FE64                     _INT1_SetInterruptHandler:
   721                           	callstack 124
   722   00FE64                     
   723                           ;mcc_generated_files/system/src/interrupt.c: 119:     INT1_InterruptHandler = InterruptH
      +                          andler;
   724   00FE64  C507  F503         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   725   00FE68  C508  F504         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   726   00FE6C  0012               	return		;funcret
   727   00FE6E                     __end_of_INT1_SetInterruptHandler:
   728                           	callstack 0
   729                           
   730 ;; *************** function _INT0_SetInterruptHandler *****************
   731 ;; Defined at:
   732 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   735 ;;		 -> INT0_DefaultInterruptHandler(1), 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;Total ram usage:        2 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_INTERRUPT_Initialize
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text6
   761   00FE5A                     __ptext6:
   762                           	callstack 0
   763   00FE5A                     _INT0_SetInterruptHandler:
   764                           	callstack 124
   765   00FE5A                     
   766                           ;mcc_generated_files/system/src/interrupt.c: 93:     INT0_InterruptHandler = InterruptHa
      +                          ndler;
   767   00FE5A  C507  F505         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
   768   00FE5E  C508  F506         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
   769   00FE62  0012               	return		;funcret
   770   00FE64                     __end_of_INT0_SetInterruptHandler:
   771                           	callstack 0
   772                           
   773 ;; *************** function _CLOCK_Initialize *****************
   774 ;; Defined at:
   775 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_SYSTEM_Initialize
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text7
   803   00FEA0                     __ptext7:
   804                           	callstack 0
   805   00FEA0                     _CLOCK_Initialize:
   806                           	callstack 125
   807   00FEA0                     
   808                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x60;
   809   00FEA0  0E60               	movlw	96
   810   00FEA2  0100               	movlb	0	; () banked
   811   00FEA4  6FAD               	movwf	173,b	;volatile
   812                           
   813                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x40;
   814   00FEA6  0E40               	movlw	64
   815   00FEA8  6FAF               	movwf	175,b	;volatile
   816                           
   817                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
   818   00FEAA  0E00               	movlw	0
   819   00FEAC  6FB3               	movwf	179,b	;volatile
   820                           
   821                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x8;
   822   00FEAE  0E08               	movlw	8
   823   00FEB0  6FB1               	movwf	177,b	;volatile
   824                           
   825                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
   826   00FEB2  0E00               	movlw	0
   827   00FEB4  6FB0               	movwf	176,b	;volatile
   828                           
   829                           ;mcc_generated_files/system/src/clock.c: 51:     ACTCON = 0x40;
   830   00FEB6  0E40               	movlw	64
   831   00FEB8  6FAC               	movwf	172,b	;volatile
   832                           
   833                           ;mcc_generated_files/system/src/clock.c: 53:     FSCMCON = 0x0;
   834   00FEBA  0E00               	movlw	0
   835   00FEBC  0104               	movlb	4	; () banked
   836   00FEBE  6F58               	movwf	88,b	;volatile
   837   00FEC0                     
   838                           ; BSR set to: 4
   839   00FEC0  0012               	return		;funcret
   840   00FEC2                     __end_of_CLOCK_Initialize:
   841                           	callstack 0
   842                           
   843 ;; *************** function _CLC1_Initialize *****************
   844 ;; Defined at:
   845 ;;		line 38 in file "mcc_generated_files/clc/src/clc1.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_SYSTEM_Initialize
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text8
   873   00FEC2                     __ptext8:
   874                           	callstack 0
   875   00FEC2                     _CLC1_Initialize:
   876                           	callstack 125
   877   00FEC2                     
   878                           ;mcc_generated_files/clc/src/clc1.c: 42:     CLCSELECT = 0x0;
   879   00FEC2  0E00               	movlw	0
   880   00FEC4  0100               	movlb	0	; () banked
   881   00FEC6  6FD5               	movwf	213,b	;volatile
   882                           
   883                           ;mcc_generated_files/clc/src/clc1.c: 44:     CLCnPOL = 0x0;
   884   00FEC8  0E00               	movlw	0
   885   00FECA  6FD7               	movwf	215,b	;volatile
   886                           
   887                           ;mcc_generated_files/clc/src/clc1.c: 46:     CLCnSEL0 = 0x0;
   888   00FECC  0E00               	movlw	0
   889   00FECE  6FD8               	movwf	216,b	;volatile
   890                           
   891                           ;mcc_generated_files/clc/src/clc1.c: 48:     CLCnSEL1 = 0x0;
   892   00FED0  0E00               	movlw	0
   893   00FED2  6FD9               	movwf	217,b	;volatile
   894                           
   895                           ;mcc_generated_files/clc/src/clc1.c: 50:     CLCnSEL2 = 0x0;
   896   00FED4  0E00               	movlw	0
   897   00FED6  6FDA               	movwf	218,b	;volatile
   898                           
   899                           ;mcc_generated_files/clc/src/clc1.c: 52:     CLCnSEL3 = 0x1;
   900   00FED8  0E01               	movlw	1
   901   00FEDA  6FDB               	movwf	219,b	;volatile
   902                           
   903                           ;mcc_generated_files/clc/src/clc1.c: 54:     CLCnGLS0 = 0x2;
   904   00FEDC  0E02               	movlw	2
   905   00FEDE  6FDC               	movwf	220,b	;volatile
   906                           
   907                           ;mcc_generated_files/clc/src/clc1.c: 56:     CLCnGLS1 = 0x0;
   908   00FEE0  0E00               	movlw	0
   909   00FEE2  6FDD               	movwf	221,b	;volatile
   910                           
   911                           ;mcc_generated_files/clc/src/clc1.c: 58:     CLCnGLS2 = 0x0;
   912   00FEE4  0E00               	movlw	0
   913   00FEE6  6FDE               	movwf	222,b	;volatile
   914                           
   915                           ;mcc_generated_files/clc/src/clc1.c: 60:     CLCnGLS3 = 0x80;
   916   00FEE8  0E80               	movlw	128
   917   00FEEA  6FDF               	movwf	223,b	;volatile
   918                           
   919                           ;mcc_generated_files/clc/src/clc1.c: 62:     CLCDATA = 0x0;
   920   00FEEC  0E00               	movlw	0
   921   00FEEE  6FD4               	movwf	212,b	;volatile
   922                           
   923                           ;mcc_generated_files/clc/src/clc1.c: 64:     CLCnCON = 0x83;
   924   00FEF0  0E83               	movlw	131
   925   00FEF2  6FD6               	movwf	214,b	;volatile
   926   00FEF4                     
   927                           ; BSR set to: 0
   928   00FEF4  0012               	return		;funcret
   929   00FEF6                     __end_of_CLC1_Initialize:
   930                           	callstack 0
   931   000000                     
   932                           	psect	rparam
   933   000000                     
   934                           	psect	config
   935                           
   936                           ;Config register CONFIG1 @ 0x300000
   937                           ;	External Oscillator Selection
   938                           ;	FEXTOSC = OFF, Oscillator not enabled
   939                           ;	Reset Oscillator Selection
   940                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
   941   300000                     	org	3145728
   942   300000  8C                 	db	140
   943                           
   944                           ;Config register CONFIG2 @ 0x300001
   945                           ;	Clock out Enable bit
   946                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   947                           ;	PRLOCKED One-Way Set Enable bit
   948                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
   949                           ;	Boot Block enable bit
   950                           ;	BBEN = OFF, Boot block disabled
   951                           ;	Clock Switch Enable bit
   952                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   953                           ;	Fail-Safe Clock Monitor Enable bit
   954                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   955                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
   956                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
   957                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
   958                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
   959   300001                     	org	3145729
   960   300001  FF                 	db	255
   961                           
   962                           ;Config register CONFIG3 @ 0x300002
   963                           ;	MCLR Enable bit
   964                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   965                           ;	Power-up timer selection bits
   966                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   967                           ;	Multi-vector enable bit
   968                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
   969                           ;	IVTLOCK bit One-way set enable bit
   970                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
   971                           ;	Low Power BOR Enable bit
   972                           ;	LPBOREN = OFF, Low-Power BOR disabled
   973                           ;	Brown-out Reset Enable bits
   974                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   975   300002                     	org	3145730
   976   300002  F7                 	db	247
   977                           
   978                           ;Config register CONFIG4 @ 0x300003
   979                           ;	Brown-out Reset Voltage Selection bits
   980                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
   981                           ;	ZCD Disable bit
   982                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
   983                           ;	PPSLOCK bit One-Way Set Enable bit
   984                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
   985                           ;	Stack Full/Underflow Reset Enable bit
   986                           ;	STVREN = ON, Stack full/underflow will cause Reset
   987                           ;	Low Voltage Programming Enable bit
   988                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   989                           ;	Background Debugger
   990                           ;	DEBUG = OFF, Background Debugger disabled
   991                           ;	Extended Instruction Set Enable bit
   992                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   993   300003                     	org	3145731
   994   300003  FF                 	db	255
   995                           
   996                           ;Config register CONFIG5 @ 0x300004
   997                           ;	WDT Period selection bits
   998                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   999                           ;	WDT operating mode
  1000                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1001   300004                     	org	3145732
  1002   300004  9F                 	db	159
  1003                           
  1004                           ;Config register CONFIG6 @ 0x300005
  1005                           ;	WDT Window Select bits
  1006                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1007                           ;	WDT input clock selector
  1008                           ;	WDTCCS = SC, Software Control
  1009   300005                     	org	3145733
  1010   300005  FF                 	db	255
  1011                           
  1012                           ;Config register CONFIG7 @ 0x300006
  1013                           ;	Boot Block Size Selection bits
  1014                           ;	BBSIZE = BBSIZE_16384, Boot Block size is 16384 words
  1015   300006                     	org	3145734
  1016   300006  7F                 	db	127
  1017                           
  1018                           ;Config register CONFIG8 @ 0x300007
  1019                           ;	SAF Block Size Selection bits
  1020                           ;	SAFSZ = SAFSZ_NONE, NONE
  1021   300007                     	org	3145735
  1022   300007  FF                 	db	255
  1023                           
  1024                           ;Config register CONFIG9 @ 0x300008
  1025                           ;	Boot Block Write Protection bit
  1026                           ;	WRTB = OFF, Boot Block not Write protected
  1027                           ;	Configuration Register Write Protection bit
  1028                           ;	WRTC = OFF, Configuration registers not Write protected
  1029                           ;	Data EEPROM Write Protection bit
  1030                           ;	WRTD = OFF, Data EEPROM not Write protected
  1031                           ;	SAF Write protection bit
  1032                           ;	WRTSAF = OFF, SAF not Write Protected
  1033                           ;	Application Block write protection bit
  1034                           ;	WRTAPP = OFF, Application Block not write protected
  1035   300008                     	org	3145736
  1036   300008  FF                 	db	255
  1037                           
  1038                           ;Config register CONFIG10 @ 0x300009
  1039                           ;	Data EEPROM Code Protection bit
  1040                           ;	CPD = OFF, Data EEPROM code protection disabled
  1041   300009                     	org	3145737
  1042   300009  FF                 	db	255
  1043                           
  1044                           ;Config register CONFIG11 @ 0x30000A
  1045                           ;	PFM Code Protection bit
  1046                           ;	CP = OFF, PFM code protection disabled
  1047   30000A                     	org	3145738
  1048   30000A  FF                 	db	255
  1049                           tosu	equ	0x4FF
  1050                           tosh	equ	0x4FE
  1051                           tosl	equ	0x4FD
  1052                           stkptr	equ	0x4FC
  1053                           pclatu	equ	0x4FB
  1054                           pclath	equ	0x4FA
  1055                           pcl	equ	0x4F9
  1056                           tblptru	equ	0x4F8
  1057                           tblptrh	equ	0x4F7
  1058                           tblptrl	equ	0x4F6
  1059                           tablat	equ	0x4F5
  1060                           prodh	equ	0x4F4
  1061                           prodl	equ	0x4F3
  1062                           indf0	equ	0x4EF
  1063                           postinc0	equ	0x4EE
  1064                           postdec0	equ	0x4ED
  1065                           preinc0	equ	0x4EC
  1066                           plusw0	equ	0x4EB
  1067                           fsr0h	equ	0x4EA
  1068                           fsr0l	equ	0x4E9
  1069                           wreg	equ	0x4E8
  1070                           indf1	equ	0x4E7
  1071                           postinc1	equ	0x4E6
  1072                           postdec1	equ	0x4E5
  1073                           preinc1	equ	0x4E4
  1074                           plusw1	equ	0x4E3
  1075                           fsr1h	equ	0x4E2
  1076                           fsr1l	equ	0x4E1
  1077                           bsr	equ	0x4E0
  1078                           indf2	equ	0x4DF
  1079                           postinc2	equ	0x4DE
  1080                           postdec2	equ	0x4DD
  1081                           preinc2	equ	0x4DC
  1082                           plusw2	equ	0x4DB
  1083                           fsr2h	equ	0x4DA
  1084                           fsr2l	equ	0x4D9
  1085                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       8
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT2_DefaultInterruptHandler(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT1_DefaultInterruptHandler(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     294
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _CLC1_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       8       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBIGSFR_1        100      0       0      36        0.0%
BIGRAM             FFF      0       0      37        0.0%
BITBIGSFRhhhh       29      0       0      38        0.0%
BITBIGSFRhhhlhh     19      0       0      39        0.0%
BITBIGSFRhhhlhh      3      0       0      40        0.0%
BITBIGSFRhhhlhl      4      0       0      41        0.0%
BITBIGSFRhhhll      5A      0       0      42        0.0%
BITBIGSFRhhlhhh     18      0       0      43        0.0%
BITBIGSFRhhlhhh     15      0       0      44        0.0%
BITBIGSFRhhlhhh      3      0       0      45        0.0%
BITBIGSFRhhlhhl    177      0       0      46        0.0%
BITBIGSFRhhlhhl     22      0       0      47        0.0%
BITBIGSFRhhlhhl     5D      0       0      48        0.0%
BITBIGSFRhhlhhl     B6      0       0      49        0.0%
BITBIGSFRhhlhl       3      0       0      50        0.0%
BITBIGSFRhhll       60      0       0      51        0.0%
BITBIGSFRlhhh       20      0       0      52        0.0%
BITBIGSFRlhhlh       1      0       0      53        0.0%
BITBIGSFRlhl         1      0       0      54        0.0%
BITBIGSFRll         AC      0       0      55        0.0%
ABS                  0      0       8      56        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Dec 22 06:33:41 2024

                                      l31 FEF4                                        l57 FEC0  
                                      l68 FE9E                                       l103 FF28  
                                     l113 FE62                                       l126 FE6C  
                                     l139 FE76                                       l270 FE86  
                                     l259 FFFA                                       l269 FE86  
                                     l960 FF44                                       l954 FEC2  
                                     l970 FF58                                       l962 FF46  
                                     l956 FEA0                                       l980 FF92  
                                     l972 FF86                                       l964 FF48  
                                     l982 FF94                                       l974 FF88  
                                     l966 FF54                                       l958 FF2A  
                                     l984 FF96                                       l976 FF8A  
                                     l968 FF56                                       l986 FF98  
                                     l978 FF8C                ??_INT0_SetInterruptHandler 0509  
                                    l1040 FE64                                      l1042 FE6E  
                                    l1050 FF0A                                      l1052 FF18  
                                    l1044 FEF6                                      l1060 FE82  
                                    l1038 FE5A                                      l1054 FF1A  
                                    l1046 FEFC                                      l1048 FF08  
                                    l1056 FE8E                                      l1058 FE9A  
                                    _LATA 0140                                      _LATB 0141  
                                    _LATC 0142                                      _LATD 0143  
                                    _LATE 0144                                      _WPUA 0401  
                                    _WPUB 0409                                      _WPUC 0411  
                                    _WPUD 0419                                      _WPUE 0421  
                                    _main FE82                 ?_INT2_SetInterruptHandler 0507  
                                    start FFFC                              ___param_bank 0000  
                                   ?_main 0507                                     _IOCAF 0407  
                                   _IOCBF 040F                                     _IOCCF 0417  
                                   _IOCEF 0427                                     _IOCAN 0406  
                                   _IOCAP 0405                                     _IOCBN 040E  
                                   _IOCBP 040D                                     _IOCCN 0416  
                                   _IOCCP 0415                                     _IOCEN 0426  
                                   _IOCEP 0425                                     _IOCWF 043F  
                                   _IOCWN 043E                                     _IOCWP 043D  
                                   _OSCEN 00B3                                     _TRISA 0148  
                                   _TRISB 0149                                     _TRISC 014A  
                                   _TRISD 014B                                     _TRISE 014C  
                _INT1_SetInterruptHandler FE64                           __initialization FE78  
                            __end_of_main FE8E                                    ??_main 0509  
                           __activetblptr 0002                                    _ACTCON 00AC  
                                  _ANSELA 0400                                    _ANSELB 0408  
                                  _ANSELC 0410                                    _ANSELD 0418  
                                  _ANSELE 0420                                    _RB1I2C 0286  
                                  _RB2I2C 0285                                    _RC3I2C 0288  
                                  _RC4I2C 0287                                    _RA2PPS 0203  
                                  _ODCONA 0402                                    _ODCONB 040A  
                                  _ODCONC 0412                                    _ODCOND 041A  
                                  _ODCONE 0422                                    _INLVLA 0404  
                                  _INLVLB 040C                                    _INLVLC 0414  
                                  _INLVLD 041C                                    _INLVLE 0424  
                                  _OSCFRQ 00B1                                    isa$std 0001  
                       ?_CLOCK_Initialize 0507              _INT2_DefaultInterruptHandler 0000  
                      ??_CLOCK_Initialize 0507                                    tblptru 04F8  
INT2_SetInterruptHandler@InterruptHandler 0507  INT1_SetInterruptHandler@InterruptHandler 0507  
INT0_SetInterruptHandler@InterruptHandler 0507                           _CLC1_Initialize FEC2  
                       _SYSTEM_Initialize FE8E                                __accesstop 0560  
                 __end_of__initialization FE78                        ?_SYSTEM_Initialize 0507  
                           ___rparam_used 0001                            __pcstackCOMRAM 0507  
                     ??_SYSTEM_Initialize 0509          __end_of_INT2_SetInterruptHandler FE78  
               __end_of_SYSTEM_Initialize FEA0                     _INT0_InterruptHandler 0505  
                              __pnvCOMRAM 0501                                   _CLCDATA 00D4  
                                 _CLCnCON 00D6                                   _CLCnPOL 00D7  
                                 _FSCMCON 0458                   __end_of_CLC1_Initialize FEF6  
              ??_INT1_SetInterruptHandler 0509                                   _OSCCON1 00AD  
                                 _OSCCON3 00AF                                   _OSCTUNE 00B0  
                                 _SLRCONA 0403                                   _SLRCONB 040B  
                                 _SLRCONC 0413                                   _SLRCOND 041B  
                                 _SLRCONE 0423                 ?_INT0_SetInterruptHandler 0507  
                               _CLCIN0PPS 0261                                 _CLCIN1PPS 0262  
                                 __Hparam 0000                                   __Lparam 0000  
                               _CLCSELECT 00D5                                   __pcinit FE78  
                                 __ramtop 1600                                   __ptext0 FE82  
                                 __ptext1 FE8E                                   __ptext2 FF2A  
                                 __ptext3 FEF6                                   __ptext4 FE6E  
                                 __ptext5 FE64                                   __ptext6 FE5A  
                                 __ptext7 FEA0                                   __ptext8 FEC2  
                ??_PIN_MANAGER_Initialize 0507                      end_of_initialization FE78  
                _INT2_SetInterruptHandler FE6E                                 _PIR10bits 04BC  
                           __Lmediumconst 0000                     _INT1_InterruptHandler 0503  
                        ?_CLC1_Initialize 0507              __end_of_INTERRUPT_Initialize FF2A  
            _INT0_DefaultInterruptHandler 0000                       start_initialization FE78  
                             _CLCDATAbits 00D4          __end_of_INT0_SetInterruptHandler FE64  
                   _INT2_InterruptHandler 0501                    _PIN_MANAGER_Initialize FF2A  
                             _CLCnCONbits 00D6                ??_INT2_SetInterruptHandler 0509  
                                _CLCnGLS0 00DC                                  _CLCnGLS1 00DD  
                                _CLCnGLS2 00DE                                  _CLCnGLS3 00DF  
                                _CLCnSEL0 00D8                                  _CLCnSEL1 00D9  
                                _CLCnSEL2 00DA                                  _CLCnSEL3 00DB  
                    _INTERRUPT_Initialize FEF6                          _CLOCK_Initialize FEA0  
               ?_INT1_SetInterruptHandler 0507                                  _PIR1bits 04B3  
                                _PIR6bits 04B8                               _INTCON0bits 04D6  
                   ?_INTERRUPT_Initialize 0507                  _INT0_SetInterruptHandler FE5A  
                                __Hrparam 0000                                  __Lrparam 0000  
                                isa$xinst 0000              _INT1_DefaultInterruptHandler 0000  
                  ??_INTERRUPT_Initialize 0509                   ?_PIN_MANAGER_Initialize 0507  
                __end_of_CLOCK_Initialize FEC2          __end_of_INT1_SetInterruptHandler FE6E  
          __end_of_PIN_MANAGER_Initialize FFFC                         ??_CLC1_Initialize 0507  
